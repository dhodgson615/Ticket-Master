name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Allow manual triggering

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Dependency Review
      uses: actions/dependency-review-action@v3

  update-dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools
    
    - name: Check for outdated packages
      id: outdated
      run: |
        pip list --outdated --format=json > outdated.json
        if [ -s outdated.json ]; then
          echo "has_updates=true" >> $GITHUB_OUTPUT
        else
          echo "has_updates=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Create issue for outdated dependencies
      if: steps.outdated.outputs.has_updates == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));
          
          if (outdated.length === 0) return;
          
          const packages = outdated.map(pkg => 
            `- ${pkg.name}: ${pkg.version} â†’ ${pkg.latest_version}`
          ).join('\n');
          
          const title = `Dependency Updates Available (${new Date().toISOString().split('T')[0]})`;
          const body = `## Outdated Dependencies
          
          The following packages have updates available:
          
          ${packages}
          
          ## Actions
          - [ ] Review and update dependencies in requirements.txt
          - [ ] Test compatibility with updated versions
          - [ ] Update version constraints if necessary
          
          This issue was automatically generated by the dependency update workflow.`;

          // Check if similar issue already exists
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'dependencies'
          });
          
          const hasExisting = existingIssues.data.some(issue => 
            issue.title.includes('Dependency Updates Available')
          );
          
          if (!hasExisting) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['dependencies', 'enhancement']
            });
          }